[{"/media/fari/Works/1-sample-work/spotify/src/index.js":"1","/media/fari/Works/1-sample-work/spotify/src/App.js":"2","/media/fari/Works/1-sample-work/spotify/src/components/aside/aside.jsx":"3","/media/fari/Works/1-sample-work/spotify/src/components/content/content.jsx":"4","/media/fari/Works/1-sample-work/spotify/src/components/header/header.jsx":"5","/media/fari/Works/1-sample-work/spotify/src/components/footer/footer.jsx":"6","/media/fari/Works/1-sample-work/spotify/src/components/btn/btn.jsx":"7","/media/fari/Works/1-sample-work/spotify/src/components/logo/logo.jsx":"8","/media/fari/Works/1-sample-work/spotify/src/components/greenBtn/greenBtn.jsx":"9","/media/fari/Works/1-sample-work/spotify/src/components/albumsList/albumsList.jsx":"10"},{"size":223,"mtime":1646760728263,"results":"11","hashOfConfig":"12"},{"size":4962,"mtime":1647523135999,"results":"13","hashOfConfig":"12"},{"size":1217,"mtime":1647468574456,"results":"14","hashOfConfig":"12"},{"size":848,"mtime":1647513193961,"results":"15","hashOfConfig":"12"},{"size":1171,"mtime":1647468551209,"results":"16","hashOfConfig":"12"},{"size":5701,"mtime":1647514703260,"results":"17","hashOfConfig":"12"},{"size":513,"mtime":1646851257630,"results":"18","hashOfConfig":"12"},{"size":210,"mtime":1646851627247,"results":"19","hashOfConfig":"12"},{"size":437,"mtime":1647349824848,"results":"20","hashOfConfig":"12"},{"size":1358,"mtime":1647514561636,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"1g2opfa",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"25"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"25"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},"/media/fari/Works/1-sample-work/spotify/src/index.js",[],[],["60","61"],"/media/fari/Works/1-sample-work/spotify/src/App.js",["62","63","64","65"],[],"import React from \"react\";\nimport axios from 'axios';\nimport Aside from \"./components/aside/aside\";\nimport Content from \"./components/content/content\";\nimport Header from \"./components/header/header\";\nimport Footer from \"./components/footer/footer\";\n\nimport \"./App.scss\";\n\nclass App extends React.Component {\n\n  access_token = \"BQC_zdmfNI1VAqgaXA9e2mq1s6wuwCuIrroPRPNrYdnJXzMmb-IytBnYi9wPCBmd3i9epFno8lhwiUkcKUVu-1EeNtwF2_AkghJNe0snHpbg4SNEg75bniLaO9wJ4x0U-g2FdQgJVerk_nNZeU7ttcPWFB5RWZtfysY\";\n  headers = {\n    'Authorization': `Bearer ${this.access_token}`,\n    'Content-Type': 'application/json',\n    'Accept': 'application/json',\n  };\n\n  state = {\n    currentPage: \"home\",\n    searchText: \"\",\n    isLoaded: false,\n    offset: 0,\n    play: {\n      section: '',\n      idx: null,\n      active: false,\n    },\n    track: {\n      image: \"arash.jpeg\",\n      trackName: \"Broken Angel\",\n      trackUrl: \"Broken_Angel.mp3\",\n      singerName: \"Arash - From Persia\"\n    },\n    data: {\n      recently: {\n        id: 1,\n        title: \"Recently played\",\n        tracks: []\n      },\n      all: {\n        id: 2,\n        title: \"Albums list\",\n        tracks: []\n      }\n    },\n    artists: {}\n  };\n\n  handleAsideClick = (page) => {\n    this.setState({\n      currentPage: page,\n    });\n  };\n\n  loadArtist = (artistName) => {\n    const params = `q=${artistName}&type=artist&offset=${this.state.offset}&limit=6`;\n    const newData = { ...this.state.data };\n    newData.all.tracks = [];\n    this.setState({\n      artists: {},\n      data: newData,\n    })\n\n    if (artistName == '') {\n      return\n    }\n\n    axios.get(\n      `https://api.spotify.com/v1/search?${params}`,\n      { headers: this.headers }\n    ).then(async res => {\n      if (res.data) {\n        const artistsIdList = res.data.artists.items.map(item => item.id);\n        const artists = {};\n        for (const artistId of artistsIdList) {\n          artists[artistId] = await this.loadAlbums(artistId);\n        }\n        this.setState({\n          artists: artists\n        }, () => {\n          this.loadMore();\n        });\n      }\n    }).catch(err => {\n      console.log(err)\n    })\n  };\n\n  loadAlbums = async (artistId) => {\n    const res = await axios.get(\n      `https://api.spotify.com/v1/artists/${artistId}/albums`,\n      { headers: this.headers }\n    );\n    if (res.data) {\n      const albums = res.data.items;\n      const albumsList = albums.map(item => {\n        return {\n          album_id: item.id,\n          image_url: item.images[1].url,\n          name: item.name,\n          artist: item.artists[0].type,\n          is_loaded: false,\n        }\n      });\n      return albumsList;\n    }\n  }\n\n  loadMore = () => {\n    let artists = { ...this.state.artists };\n    let data = { ...this.state.data };\n    let tracks = [];\n\n    exit:\n    for (const id in artists) {\n      const albums = artists[id];\n      for (const album of albums) {\n        if (!album.is_loaded) {\n          album['is_loaded'] = true;\n          tracks.push({\n            image: album.image_url,\n            singerName: album.name,\n            albumsName: album.artist,\n            trackId: album.album_id,\n          });\n          if (tracks.length === 18) break exit;\n        }\n      }\n    }\n\n    data.all.tracks.push(...tracks);\n\n    this.setState({\n      artists: artists,\n      data: data,\n    })\n  }\n\n  playMusic = (title, idx) => {\n    let newData = { ...this.state.data };\n    let newRecentlyTracks = [...newData.recently.tracks];\n\n    if (title == 'Recently played') {\n      const removedTrack = newRecentlyTracks.splice(idx, 1);\n      newRecentlyTracks = [removedTrack[0], ...newRecentlyTracks];\n    } else if (title == \"Albums list\") {\n      const selectedTrackFromAll = this.state.data.all.tracks[idx];\n      const trackId = selectedTrackFromAll.trackId;\n      newRecentlyTracks = newRecentlyTracks.filter(item => item.trackId != trackId);\n      newRecentlyTracks = [selectedTrackFromAll, ...newRecentlyTracks];\n    }\n    let newPlay = { ...this.state.play };\n\n    let isPlaying = true;\n    if (idx === 0 && title === \"Recently played\") {\n      isPlaying = !this.state.data.recently.isPlaying;\n    }\n\n    newPlay.section = title;\n    newPlay.idx = idx;\n    newPlay.active = isPlaying;\n\n    newRecentlyTracks = newRecentlyTracks.slice(0, 6);\n    newData.recently.tracks = newRecentlyTracks;\n    newData.recently.isPlaying = isPlaying;\n\n    this.setState({\n      play: newPlay,\n    })\n\n\n    this.setState({\n      data: newData,\n    })\n\n\n  }\n\n  render() {\n    return (\n      <>\n        <Aside action={this.handleAsideClick} />\n        <Header\n          page={this.state.currentPage}\n          title={this.state.currentPage}\n          action={this.loadArtist}\n        />\n        <Content\n          data_app={this.state.data}\n          scroll_app={this.loadMore}\n          playMusic_app={this.playMusic}\n          play_app={this.state.play}\n        />\n        <Footer data={this.state.track} />\n      </>\n    );\n  }\n}\n\nexport default App;","/media/fari/Works/1-sample-work/spotify/src/components/aside/aside.jsx",[],[],"/media/fari/Works/1-sample-work/spotify/src/components/content/content.jsx",[],[],"/media/fari/Works/1-sample-work/spotify/src/components/header/header.jsx",["66"],[],"import React from \"react\";\nimport \"./header.scss\";\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  state = {\n    searchText: \"\",\n    timeout: null,\n  };\n\n  handleSearchText = (e) => {\n    clearTimeout(this.state.timeout);\n\n    const text = e.target.value;\n    const timeout = setTimeout(() => this.props.action(text), 2000);\n\n    this.setState({\n      searchText: text,\n      timeout: timeout,\n    });\n  };\n\n  clearInput = () => {\n    this.setState({\n      searchText: \"\",\n    });\n  };\n\n  loadData = () => {\n    this.props.action(this.state.searchText);\n  };\n\n  render() {\n    return (\n      <div className=\"header\">\n        <i className=\"las la-chevron-circle-left\"></i>\n        <i className=\"las la-chevron-circle-right\"></i>\n        <span>\n          <i className=\"las la-search\" onClick={() => this.loadData}></i>\n          <input\n            type=\"text\"\n            value={this.state.searchText}\n            onChange={this.handleSearchText}\n            placeholder=\"Artist Name\"\n          />\n          <i className=\"las la-times\" onClick={this.clearInput}></i>\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","/media/fari/Works/1-sample-work/spotify/src/components/footer/footer.jsx",["67","68","69","70","71","72"],[],"import React from \"react\";\nimport \"./footer.scss\";\n\nclass Footer extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  state = {\n    artist: [],\n    volume: {\n      isMoving: false,\n      percent: 50,\n    },\n    isPlaying: false,\n    progressBar: {\n      currentNum: 0,\n      maxNum: 11700,\n      percent: 0,\n    },\n  };\n\n  milisecontToMinute = (millisecond) => {\n    let second = millisecond / 60;\n    let minute = parseInt(second / 60);\n\n    second = parseInt(second - minute * 60);\n    if (second < 10) {\n      second = \"0\" + second;\n    }\n    if (minute < 10) {\n      minute = \"0\" + minute;\n    }\n\n    return minute + \":\" + second;\n  };\n\n  playingProgressBar = () => {\n    let progressBarNum = this.state.progressBar;\n    progressBarNum.currentNum += 60;\n    const percent = parseInt(\n      (100 * progressBarNum.currentNum) / progressBarNum.maxNum\n    );\n    progressBarNum.percent = percent;\n\n    this.setState({\n      progressBar: progressBarNum,\n    });\n  };\n\n  progressBarHandler = (e) => {\n    const box = e.target.getBoundingClientRect();\n    const boxLeft = box.left;\n    const mouseLeft = parseInt(e.clientX);\n    const diff = mouseLeft - boxLeft;\n    const boxWidth = parseInt(box.width);\n\n    if (diff < 0) diff = 0;\n    let percent = parseInt((100 * diff) / boxWidth);\n    let newCurrentNum = parseInt(\n      (percent * this.state.progressBar.maxNum) / 100\n    );\n\n    if (percent < 2) {\n      percent = 0;\n    } else if (percent > 98) {\n      percent = 100;\n    }\n\n    let newProgressBar = this.state.progressBar;\n    newProgressBar.percent = percent;\n    newProgressBar.currentNum = newCurrentNum;\n\n    this.setState({\n      progressBar: newProgressBar,\n    });\n  };\n\n  volumeHandler = () => {\n    let newVolume = this.state.volume;\n    if (newVolume.percent == 0) {\n      newVolume.percent = 50;\n    } else {\n      newVolume.percent = 0;\n    }\n    this.setState({\n      volume: newVolume,\n    });\n  };\n\n  playHandler = () => {\n    let newState = !this.state.isPlaying;\n    this.setState({\n      isPlaying: newState,\n    });\n  };\n\n  mouseDownHandler = () => {\n    let newVolume = this.state.volume;\n    newVolume.isMoving = true;\n\n    this.setState({\n      volume: newVolume,\n    });\n  };\n\n  mouseUpHandler = () => {\n    let newVolume = this.state.volume;\n    newVolume.isMoving = false;\n\n    this.setState({\n      volume: newVolume,\n    });\n  };\n\n  clickHandler = (e) => {\n    const box = e.target.getBoundingClientRect();\n    const boxLeft = box.left;\n    const mouseLeft = parseInt(e.clientX);\n    const diff = mouseLeft - boxLeft;\n    const boxWidth = parseInt(box.width);\n\n    if (diff < 0) diff = 0;\n    let percent = (100 * diff) / boxWidth;\n\n    if (percent < 5) {\n      percent = 0;\n    } else if (percent > 95) {\n      percent = 100;\n    }\n\n    let newVolume = this.state.volume;\n    newVolume.percent = percent;\n\n    this.setState({\n      volume: newVolume,\n    });\n  };\n\n  render() {\n    return (\n      <div id=\"footer\">\n        <div id=\"info\">\n          <figure>\n            <img\n              src={require(`../../assets/images/${this.props.data.image}`)}\n              alt=\"this.props.data.trackName\"\n            />\n          </figure>\n          <figcaption>\n            {this.props.data.trackName}\n            <p>{this.props.data.singerName}</p>\n          </figcaption>\n          <div className=\"icons\">\n            <i className=\"las la-heart\"></i>\n            <i className=\"las la-share-square\"></i>\n          </div>\n        </div>\n\n        <div id=\"controller\">\n          <div>\n            <i className=\"las la-random\"></i>\n            <i className=\"las la-fast-backward\"></i>\n            {this.state.isPlaying === false ? (\n              <i className=\"las la-play\" onClick={this.playHandler}></i>\n            ) : (\n              <i className=\"las la-pause\" onClick={this.playHandler}></i>\n            )}\n\n            <i className=\"las la-forward\"></i>\n            <i className=\"las la-redo-alt\"></i>\n          </div>\n          <div id=\"progressBar\">\n            <span>\n              {this.milisecontToMinute(this.state.progressBar.currentNum)}\n            </span>\n            <span id=\"firstProgressLine\" onClick={this.progressBarHandler}>\n              <span\n                id=\"secondProgressLine\"\n                style={{ width: this.state.progressBar.percent + \"%\" }}\n              ></span>\n            </span>\n\n            <span>\n              {this.milisecontToMinute(this.state.progressBar.maxNum)}\n            </span>\n          </div>\n        </div>\n\n        <div id=\"audio\" className=\"icons\">\n          <i className=\"las la-microphone-alt\"></i>\n          <i className=\"las la-bars\"></i>\n          <i className=\"lab la-connectdevelop\"></i>\n\n          {this.state.volume.percent == 0 && (\n            <i className=\"las la-volume-mute\" onClick={this.volumeHandler}></i>\n          )}\n\n          {this.state.volume.percent !== 0 &&\n            this.state.volume.percent !== 100 && (\n              <i\n                className=\"las la-volume-down\"\n                onClick={this.volumeHandler}\n              ></i>\n            )}\n\n          {this.state.volume.percent == 100 && (\n            <i className=\"las la-volume-up\" onClick={this.volumeHandler}></i>\n          )}\n\n          <span\n            id=\"firstAudioMeasure\"\n            onMouseDown={this.mouseDownHandler}\n            onMouseUp={this.mouseUpHandler}\n            onClick={this.clickHandler}\n          >\n            <span\n              id=\"secondAudioMeasure\"\n              style={{ width: this.state.volume.percent + \"%\" }}\n            >\n              <span id=\"circle\"></span>\n            </span>\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","/media/fari/Works/1-sample-work/spotify/src/components/btn/btn.jsx",["73"],[],"import React from \"react\";\nimport \"./btn.scss\";\nimport \"../../assets/styles/line-awesome/scss/line-awesome.scss\";\n\nclass Btn extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  state = {};\n  render() {\n    return (\n      <>\n        <li\n          onClick={() => {\n            this.props.action(this.props.page);\n          }}\n        >\n          <i className={\"las la-\" + this.props.icon}></i>\n          <span>{this.props.title}</span>\n        </li>\n      </>\n    );\n  }\n}\n\nexport default Btn;\n","/media/fari/Works/1-sample-work/spotify/src/components/logo/logo.jsx",["74","75"],[],"import React from \"react\";\nimport \"./logo.scss\";\n\nfunction Logo() {\n  return (\n    <a className=\"logo\" href=\"\">\n      <img src={require(\"../../assets/images/logo.png\")} />\n    </a>\n  );\n}\n\nexport default Logo;\n","/media/fari/Works/1-sample-work/spotify/src/components/greenBtn/greenBtn.jsx",["76"],[],"import React from \"react\";\nimport \"./greenBtn.scss\";\n\nclass GreenBtn extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  state = {\n    isPlaying: false,\n  };\n\n  render() {\n    return (\n      <div id=\"greenBtn\">\n        {this.state.isPlaying === true ? (\n          <i className=\"las la-pause\"></i>\n        ) : (\n          <i className=\"las la-play\"></i>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default GreenBtn;\n","/media/fari/Works/1-sample-work/spotify/src/components/albumsList/albumsList.jsx",["77","78","79","80"],[],"import React from \"react\";\nimport \"./albumsList.scss\";\n\nclass AlbumsList extends React.Component {\n  handlePlaying = (idx) => {\n    this.props.playMusic_content(this.props.data_content.title, idx);\n  };\n\n  isPlaying = (idx) => {\n    const data = this.props.data_content;\n    const playInfo = this.props.play_content;\n\n    const cond_1 = playInfo.active;\n    const cond_2 = data.id == 1 && idx == 0;\n    const cond_3 = data.id == 2 && idx == playInfo.idx;\n\n    return (cond_1 && cond_2) || (cond_1 && cond_3);\n  };\n\n  render() {\n    return (\n      <div id=\"albumsList\">\n        <h2>{this.props.data_content.title}</h2>\n        {this.props.data_content.tracks.map((item, idx) => (\n          <div\n            onClick={() => {\n              this.handlePlaying(idx);\n            }}\n            key={idx}\n            className={\"albums\" + (this.isPlaying(idx) ? \" active\" : \"\")}\n          >\n            <figure>\n              <img src={item.image} alt={item.singerName} />\n            </figure>\n            <figcaption>\n              {item.singerName}\n              <p>{item.albumsName}</p>\n            </figcaption>\n\n            {this.isPlaying(idx) ? (\n              <i className=\"las la-pause\"></i>\n            ) : (\n              <i className=\"las la-play\"></i>\n            )}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default AlbumsList;\n",{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":65,"column":20,"nodeType":"87","messageId":"88","endLine":65,"endColumn":22},{"ruleId":"85","severity":1,"message":"86","line":144,"column":15,"nodeType":"87","messageId":"88","endLine":144,"endColumn":17},{"ruleId":"85","severity":1,"message":"86","line":147,"column":22,"nodeType":"87","messageId":"88","endLine":147,"endColumn":24},{"ruleId":"85","severity":1,"message":"89","line":150,"column":73,"nodeType":"87","messageId":"88","endLine":150,"endColumn":75},{"ruleId":"90","severity":1,"message":"91","line":5,"column":3,"nodeType":"92","messageId":"93","endLine":7,"endColumn":4},{"ruleId":"90","severity":1,"message":"91","line":5,"column":3,"nodeType":"92","messageId":"93","endLine":7,"endColumn":4},{"ruleId":"94","severity":1,"message":"95","line":57,"column":19,"nodeType":"96","messageId":"97","endLine":57,"endColumn":23},{"ruleId":"85","severity":1,"message":"86","line":80,"column":27,"nodeType":"87","messageId":"88","endLine":80,"endColumn":29},{"ruleId":"94","severity":1,"message":"95","line":122,"column":19,"nodeType":"96","messageId":"97","endLine":122,"endColumn":23},{"ruleId":"85","severity":1,"message":"86","line":194,"column":38,"nodeType":"87","messageId":"88","endLine":194,"endColumn":40},{"ruleId":"85","severity":1,"message":"86","line":206,"column":38,"nodeType":"87","messageId":"88","endLine":206,"endColumn":40},{"ruleId":"90","severity":1,"message":"91","line":6,"column":3,"nodeType":"92","messageId":"93","endLine":8,"endColumn":4},{"ruleId":"98","severity":1,"message":"99","line":6,"column":5,"nodeType":"100","endLine":6,"endColumn":33},{"ruleId":"101","severity":1,"message":"102","line":7,"column":7,"nodeType":"100","endLine":7,"endColumn":60},{"ruleId":"90","severity":1,"message":"91","line":5,"column":3,"nodeType":"92","messageId":"93","endLine":7,"endColumn":4},{"ruleId":"85","severity":1,"message":"86","line":14,"column":28,"nodeType":"87","messageId":"88","endLine":14,"endColumn":30},{"ruleId":"85","severity":1,"message":"86","line":14,"column":40,"nodeType":"87","messageId":"88","endLine":14,"endColumn":42},{"ruleId":"85","severity":1,"message":"86","line":15,"column":28,"nodeType":"87","messageId":"88","endLine":15,"endColumn":30},{"ruleId":"85","severity":1,"message":"86","line":15,"column":40,"nodeType":"87","messageId":"88","endLine":15,"endColumn":42},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-const-assign","'diff' is constant.","Identifier","const","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]