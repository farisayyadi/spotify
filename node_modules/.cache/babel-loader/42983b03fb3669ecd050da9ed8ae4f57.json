{"ast":null,"code":"var _jsxFileName = \"/media/fari/Works/1-sample-work/spatify/src/components/artist/artist.jsx\";\nimport React from \"react\";\nimport \"./artist.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Artist extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      artists: [],\n      isPlaying: false\n    };\n\n    this.playHandler = idx => {\n      letnewStatus = !this.state.isPlaying;\n      console.clear();\n\n      if (idx !== 0) {\n        newStatus = true;\n        const artists = [...this.state.artists];\n        artists.splice(idx, 1);\n        const newArtists = [this.state.artists[idx], ...artists];\n        this.setState({\n          artists: newArtists,\n          isPlaying: newStatus\n        });\n        console.log(1);\n      } else {\n        console.log(2);\n        this.setState({\n          isPlaying: newStatus\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    const artists = this.props.data;\n    this.setState({\n      artists\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"artist\",\n      children: this.state.artists.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          this.playHandler(idx);\n        },\n        className: \"albums\" + (this.state.isPlaying && idx === 0 ? \" active\" : \"\"),\n        children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: require(`../../assets/images/${item.image}`),\n            alt: item.singerName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"figcaption\", {\n          children: item.singerName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.albumsName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), this.state.isPlaying ? /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"las la-pause\",\n          onClick: this.playHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"las la-play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Artist;","map":{"version":3,"sources":["/media/fari/Works/1-sample-work/spatify/src/components/artist/artist.jsx"],"names":["React","Artist","Component","constructor","props","state","artists","isPlaying","playHandler","idx","letnewStatus","console","clear","newStatus","splice","newArtists","setState","log","componentDidMount","data","render","map","item","require","image","singerName","albumsName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;;;AAEA,MAAMC,MAAN,SAAqBD,KAAK,CAACE,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAInBC,KAJmB,GAIX;AACNC,MAAAA,OAAO,EAAE,EADH;AAENC,MAAAA,SAAS,EAAE;AAFL,KAJW;;AAAA,SAgBnBC,WAhBmB,GAgBJC,GAAD,IAAS;AACrBC,MAAAA,YAAY,GAAG,CAAC,KAAKL,KAAL,CAAWE,SAA3B;AACAI,MAAAA,OAAO,CAACC,KAAR;;AAEA,UAAIH,GAAG,KAAK,CAAZ,EAAe;AACbI,QAAAA,SAAS,GAAG,IAAZ;AACA,cAAMP,OAAO,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,OAAf,CAAhB;AACAA,QAAAA,OAAO,CAACQ,MAAR,CAAeL,GAAf,EAAoB,CAApB;AACA,cAAMM,UAAU,GAAG,CAAC,KAAKV,KAAL,CAAWC,OAAX,CAAmBG,GAAnB,CAAD,EAA0B,GAAGH,OAA7B,CAAnB;AAEA,aAAKU,QAAL,CAAc;AACZV,UAAAA,OAAO,EAAES,UADG;AAEZR,UAAAA,SAAS,EAAEM;AAFC,SAAd;AAIAF,QAAAA,OAAO,CAACM,GAAR,CAAY,CAAZ;AACD,OAXD,MAWO;AACLN,QAAAA,OAAO,CAACM,GAAR,CAAY,CAAZ;AACA,aAAKD,QAAL,CAAc;AACZT,UAAAA,SAAS,EAAEM;AADC,SAAd;AAGD;AACF,KArCkB;AAElB;;AAODK,EAAAA,iBAAiB,GAAG;AAClB,UAAMZ,OAAO,GAAG,KAAKF,KAAL,CAAWe,IAA3B;AACA,SAAKH,QAAL,CAAc;AACZV,MAAAA;AADY,KAAd;AAGD;;AAyBDc,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA,gBACG,KAAKf,KAAL,CAAWC,OAAX,CAAmBe,GAAnB,CAAuB,CAACC,IAAD,EAAOb,GAAP,kBACtB;AACE,QAAA,OAAO,EAAE,MAAM;AACb,eAAKD,WAAL,CAAiBC,GAAjB;AACD,SAHH;AAKE,QAAA,SAAS,EACP,YAAY,KAAKJ,KAAL,CAAWE,SAAX,IAAwBE,GAAG,KAAK,CAAhC,GAAoC,SAApC,GAAgD,EAA5D,CANJ;AAAA,gCASE;AAAA,iCACE;AACE,YAAA,GAAG,EAAEc,OAAO,CAAE,uBAAsBD,IAAI,CAACE,KAAM,EAAnC,CADd;AAEE,YAAA,GAAG,EAAEF,IAAI,CAACG;AAFZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBATF,eAeE;AAAA,oBAAaH,IAAI,CAACG;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAfF,eAgBE;AAAA,oBAAIH,IAAI,CAACI;AAAT;AAAA;AAAA;AAAA;AAAA,gBAhBF,EAiBG,KAAKrB,KAAL,CAAWE,SAAX,gBACC;AAAG,UAAA,SAAS,EAAC,cAAb;AAA4B,UAAA,OAAO,EAAE,KAAKC;AAA1C;AAAA;AAAA;AAAA;AAAA,gBADD,gBAGC;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBApBJ;AAAA,SAIOC,GAJP;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AA6BD;;AAtEkC;;AAyErC,eAAeR,MAAf","sourcesContent":["import React from \"react\";\nimport \"./artist.scss\";\n\nclass Artist extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  state = {\n    artists: [],\n    isPlaying: false,\n  };\n\n  componentDidMount() {\n    const artists = this.props.data;\n    this.setState({\n      artists,\n    });\n  }\n\n  playHandler = (idx) => {\n    letnewStatus = !this.state.isPlaying;\n    console.clear();\n\n    if (idx !== 0) {\n      newStatus = true;\n      const artists = [...this.state.artists];\n      artists.splice(idx, 1);\n      const newArtists = [this.state.artists[idx], ...artists];\n\n      this.setState({\n        artists: newArtists,\n        isPlaying: newStatus,\n      });\n      console.log(1);\n    } else {\n      console.log(2);\n      this.setState({\n        isPlaying: newStatus,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <div id=\"artist\">\n        {this.state.artists.map((item, idx) => (\n          <div\n            onClick={() => {\n              this.playHandler(idx);\n            }}\n            key={idx}\n            className={\n              \"albums\" + (this.state.isPlaying && idx === 0 ? \" active\" : \"\")\n            }\n          >\n            <figure>\n              <img\n                src={require(`../../assets/images/${item.image}`)}\n                alt={item.singerName}\n              />\n            </figure>\n            <figcaption>{item.singerName}</figcaption>\n            <p>{item.albumsName}</p>\n            {this.state.isPlaying ? (\n              <i className=\"las la-pause\" onClick={this.playHandler}></i>\n            ) : (\n              <i className=\"las la-play\"></i>\n            )}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Artist;\n"]},"metadata":{},"sourceType":"module"}