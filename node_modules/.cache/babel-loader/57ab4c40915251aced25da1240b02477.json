{"ast":null,"code":"var _jsxFileName = \"/media/fari/Works/1-sample-work/spotify/src/App.js\";\nimport React from \"react\";\nimport axios from 'axios';\nimport Aside from \"./components/aside/aside\";\nimport Content from \"./components/content/content\";\nimport Header from \"./components/header/header\";\nimport Footer from \"./components/footer/footer\";\nimport \"./App.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: \"home\",\n      searchText: \"\",\n      isLoaded: false,\n      track: {\n        image: \"arash.jpeg\",\n        trackName: \"harchi_1\",\n        trackUrl: \"harchi_1.mp3\",\n        singerName: \"Arash\"\n      },\n      data: {\n        recently: {\n          isPlaying: false,\n          title: \"Recently played\",\n          tracks: [{\n            image: \"Katy_Perry_Smile.png\",\n            singerName: \"Kety Perry\",\n            albumsName: \"smile\"\n          }, {\n            image: \"arash.jpeg\",\n            singerName: \"Arash\",\n            albumsName: \"harchi\"\n          }, {\n            image: \"alesso.jpeg\",\n            singerName: \"alesso\",\n            albumsName: \"chert\"\n          }]\n        },\n        all: {\n          title: \"Tracks list\",\n          tracks: [{\n            image: \"Katy_Perry_Smile.png\",\n            singerName: \"Kety Perry\",\n            albumsName: \"smile\"\n          }, {\n            image: \"arash.jpeg\",\n            singerName: \"Arash\",\n            albumsName: \"harchi\"\n          }, {\n            image: \"alesso.jpeg\",\n            singerName: \"alesso\",\n            albumsName: \"chert\"\n          }, {\n            image: \"rap.jpg\",\n            singerName: \"Adel\",\n            albumsName: \"adel\"\n          }, {\n            image: \"arash.jpeg\",\n            singerName: \"Arash\",\n            albumsName: \"harchi\"\n          }, {\n            image: \"alesso.jpeg\",\n            singerName: \"alesso\",\n            albumsName: \"chert\"\n          }]\n        }\n      }\n    };\n\n    this.handleAsideClick = page => {\n      this.setState({\n        currentPage: page\n      });\n      console.log(\"page:\", page);\n    };\n\n    this.handleSearch = singer => {\n      console.clear();\n      console.log(singer);\n      this.loadAlbums(singer);\n    };\n\n    this.loadAlbums = singer => {\n      const access_token = \"\";\n      const headers = {\n        'Authorization': `token ${access_token}`\n      };\n      const params = {};\n      axios.get(\"https://api.spotify.com/v1/search\", {\n        headers,\n        params\n      }).then(data => {}).catch(err => {\n        console.log(err);\n      });\n      fetch(\"https://api.spotify.com/v1/search\").then(res => res.json()).then(result => {\n        this.setState({\n          isLoaded: true,\n          tracks: result.items\n        });\n      }, error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      }); // const recivedData = [\n      //   {\n      //     singer: \"fari 1\",\n      //     track: \"track 1\",\n      //   },\n      //   {\n      //     singer: \"fari 2\",\n      //     track: \"track 2\",\n      //   },\n      // ];\n      // this.setState({\n      //   data: recivedData,\n      // });\n    };\n\n    this.loadMore = () => {\n      let newTracks = this.state.tracks;\n      let newData = newTracks.all.data;\n      newData = [...newData, ...newData];\n      newTracks.all.data = newData;\n      this.setState({\n        tracks: newTracks\n      });\n      console.log(\"loadMore: \", newTracks);\n    };\n\n    this.playMusic = (title, idx) => {\n      const data = this.state.data;\n      let newData = { ...data\n      };\n      let newRecentlyTracks = newData.recently.tracks;\n\n      if (title == 'Recently played') {\n        const removedTrack = newRecentlyTracks.splice(idx, 1);\n        newRecentlyTracks = [removedTrack[0], ...newRecentlyTracks];\n      } else if (title == \"Tracks list\") {\n        const selectedTrackFromAll = this.state.data.all.tracks[idx];\n        newRecentlyTracks = [selectedTrackFromAll, ...newRecentlyTracks];\n      }\n\n      let isPlaying = true;\n\n      if (idx === 0 && title === \"Recently played\") {\n        isPlaying = !this.state.data.recently.isPlaying;\n      }\n\n      newRecentlyTracks = newRecentlyTracks.slice(0, 6);\n      newData.recently.tracks = newRecentlyTracks;\n      newData.recently.isPlaying = isPlaying;\n      this.setState({\n        data: newData\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Aside, {\n        action: this.handleAsideClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        page: this.state.currentPage,\n        title: this.state.currentPage,\n        action: this.handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        data_app: this.state.data,\n        scroll_app: this.loadMore,\n        play_app: this.playMusic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        data: this.state.track\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/media/fari/Works/1-sample-work/spotify/src/App.js"],"names":["React","axios","Aside","Content","Header","Footer","App","Component","constructor","props","state","currentPage","searchText","isLoaded","track","image","trackName","trackUrl","singerName","data","recently","isPlaying","title","tracks","albumsName","all","handleAsideClick","page","setState","console","log","handleSearch","singer","clear","loadAlbums","access_token","headers","params","get","then","catch","err","fetch","res","json","result","items","error","loadMore","newTracks","newData","playMusic","idx","newRecentlyTracks","removedTrack","splice","selectedTrackFromAll","slice","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from 'axios';\nimport Aside from \"./components/aside/aside\";\nimport Content from \"./components/content/content\";\nimport Header from \"./components/header/header\";\nimport Footer from \"./components/footer/footer\";\n\nimport \"./App.scss\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  state = {\n    currentPage: \"home\",\n    searchText: \"\",\n    isLoaded: false,\n    track: {\n      image: \"arash.jpeg\",\n      trackName: \"harchi_1\",\n      trackUrl: \"harchi_1.mp3\",\n      singerName: \"Arash\"\n    },\n    data: {\n      recently: {\n        isPlaying: false,\n        title: \"Recently played\",\n        tracks: [\n          {\n            image: \"Katy_Perry_Smile.png\",\n            singerName: \"Kety Perry\",\n            albumsName: \"smile\",\n          },\n          {\n            image: \"arash.jpeg\",\n            singerName: \"Arash\",\n            albumsName: \"harchi\",\n          },\n          {\n            image: \"alesso.jpeg\",\n            singerName: \"alesso\",\n            albumsName: \"chert\",\n          }\n        ]\n      },\n      all: {\n        title: \"Tracks list\",\n        tracks: [\n          {\n            image: \"Katy_Perry_Smile.png\",\n            singerName: \"Kety Perry\",\n            albumsName: \"smile\",\n          },\n          {\n            image: \"arash.jpeg\",\n            singerName: \"Arash\",\n            albumsName: \"harchi\",\n          },\n          {\n            image: \"alesso.jpeg\",\n            singerName: \"alesso\",\n            albumsName: \"chert\",\n          },\n          {\n            image: \"rap.jpg\",\n            singerName: \"Adel\",\n            albumsName: \"adel\",\n          },\n          {\n            image: \"arash.jpeg\",\n            singerName: \"Arash\",\n            albumsName: \"harchi\",\n          },\n          {\n            image: \"alesso.jpeg\",\n            singerName: \"alesso\",\n            albumsName: \"chert\",\n          }\n        ]\n      }\n    }\n  };\n\n  handleAsideClick = (page) => {\n    this.setState({\n      currentPage: page,\n    });\n    console.log(\"page:\", page);\n  };\n\n  handleSearch = (singer) => {\n    console.clear();\n    console.log(singer);\n    this.loadAlbums(singer);\n  };\n\n  loadAlbums = (singer) => {\n    const access_token = \"\";\n    const headers = {\n      'Authorization': `token ${access_token}`\n    };\n    const params = {\n\n    };\n\n    axios.get(\n      \"https://api.spotify.com/v1/search\",\n      {\n        headers,\n        params,\n      }\n    ).then((data) => { }).catch(err => {\n      console.log(err)\n    })\n    fetch(\"https://api.spotify.com/v1/search\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            tracks: result.items\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n\n    // const recivedData = [\n    //   {\n    //     singer: \"fari 1\",\n    //     track: \"track 1\",\n    //   },\n    //   {\n    //     singer: \"fari 2\",\n    //     track: \"track 2\",\n    //   },\n    // ];\n\n    // this.setState({\n    //   data: recivedData,\n    // });\n  };\n\n  loadMore = () => {\n    let newTracks = this.state.tracks;\n    let newData = newTracks.all.data;\n    newData = [...newData, ...newData];\n    newTracks.all.data = newData;\n\n    this.setState({\n      tracks: newTracks,\n    });\n\n    console.log(\"loadMore: \", newTracks)\n  }\n\n  playMusic = (title, idx) => {\n    const data = this.state.data;\n    let newData = { ...data };\n    let newRecentlyTracks = newData.recently.tracks;\n\n    if (title == 'Recently played') {\n      const removedTrack = newRecentlyTracks.splice(idx, 1);\n      newRecentlyTracks = [removedTrack[0], ...newRecentlyTracks];\n    } else if (title == \"Tracks list\") {\n      const selectedTrackFromAll = this.state.data.all.tracks[idx];\n      newRecentlyTracks = [selectedTrackFromAll, ...newRecentlyTracks];\n    }\n\n    let isPlaying = true;\n    if (idx === 0 && title === \"Recently played\") {\n      isPlaying = !this.state.data.recently.isPlaying;\n    }\n\n    newRecentlyTracks = newRecentlyTracks.slice(0, 6);\n    newData.recently.tracks = newRecentlyTracks;\n    newData.recently.isPlaying = isPlaying;\n\n    this.setState({\n      data: newData\n    })\n  }\n\n  render() {\n    return (\n      <>\n        <Aside action={this.handleAsideClick} />\n        <Header\n          page={this.state.currentPage}\n          title={this.state.currentPage}\n          action={this.handleSearch}\n        />\n        <Content\n          data_app={this.state.data}\n          scroll_app={this.loadMore}\n          play_app={this.playMusic}\n        />\n        <Footer data={this.state.track} />\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}