{"ast":null,"code":"var _jsxFileName = \"/media/fari/Works/1-sample-work/spotify/src/components/trackList/trackList.jsx\";\nimport React from \"react\";\nimport \"./trackList.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TrackList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPlaying: false,\n      artists: []\n    };\n\n    this.playHandler = idx => {\n      let newStatus = !this.state.isPlaying;\n\n      if (idx !== 0) {\n        newStatus = true;\n        const artists = [...this.props.tracks.singerName];\n        artists.splice(idx, 1);\n        console.log(artists);\n        const newArtists = [this.props.tracks[idx], ...artists];\n        this.setState({\n          artists: newArtists\n        });\n      }\n\n      this.setState({\n        isPlaying: newStatus\n      });\n      console.log(newStatus);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"trackList\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: this.props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), this.props.tracks.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          //this.props.action(this.props.title, idx);\n          this.playHandler(idx);\n          {\n            this.props.title == \"Recently Played\" && item.length >= 5 && item.slice(0, 5);\n          }\n        },\n        className: \"albums\" + (this.state.isPlaying && idx === 0 ? \" active\" : \"\"),\n        children: [/*#__PURE__*/_jsxDEV(\"figure\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: require(`../../assets/images/${item.image}`),\n            alt: item.singerName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"figcaption\", {\n          children: item.singerName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.albumsName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), this.state.isPlaying && idx === 0 ? /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"las la-pause\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"las la-play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default TrackList;","map":{"version":3,"sources":["/media/fari/Works/1-sample-work/spotify/src/components/trackList/trackList.jsx"],"names":["React","TrackList","Component","constructor","props","state","isPlaying","artists","playHandler","idx","newStatus","tracks","singerName","splice","console","log","newArtists","setState","render","title","map","item","length","slice","require","image","albumsName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;;;AAEA,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAInBC,KAJmB,GAIX;AACNC,MAAAA,SAAS,EAAE,KADL;AAENC,MAAAA,OAAO,EAAE;AAFH,KAJW;;AAAA,SASnBC,WATmB,GASJC,GAAD,IAAS;AACrB,UAAIC,SAAS,GAAG,CAAC,KAAKL,KAAL,CAAWC,SAA5B;;AAEA,UAAIG,GAAG,KAAK,CAAZ,EAAe;AACbC,QAAAA,SAAS,GAAG,IAAZ;AACA,cAAMH,OAAO,GAAG,CAAC,GAAG,KAAKH,KAAL,CAAWO,MAAX,CAAkBC,UAAtB,CAAhB;AACAL,QAAAA,OAAO,CAACM,MAAR,CAAeJ,GAAf,EAAoB,CAApB;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AACA,cAAMS,UAAU,GAAG,CAAC,KAAKZ,KAAL,CAAWO,MAAX,CAAkBF,GAAlB,CAAD,EAAyB,GAAGF,OAA5B,CAAnB;AAEA,aAAKU,QAAL,CAAc;AACZV,UAAAA,OAAO,EAAES;AADG,SAAd;AAGD;;AAED,WAAKC,QAAL,CAAc;AACZX,QAAAA,SAAS,EAAEI;AADC,OAAd;AAGAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,SAAZ;AACD,KA5BkB;AAElB;;AA4BDQ,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA,8BACE;AAAA,kBAAK,KAAKd,KAAL,CAAWe;AAAhB;AAAA;AAAA;AAAA;AAAA,cADF,EAEG,KAAKf,KAAL,CAAWO,MAAX,CAAkBS,GAAlB,CAAsB,CAACC,IAAD,EAAOZ,GAAP,kBACrB;AACE,QAAA,OAAO,EAAE,MAAM;AACb;AACA,eAAKD,WAAL,CAAiBC,GAAjB;AAEA;AACE,iBAAKL,KAAL,CAAWe,KAAX,IAAoB,iBAApB,IACEE,IAAI,CAACC,MAAL,IAAe,CADjB,IAEED,IAAI,CAACE,KAAL,CAAW,CAAX,EAAc,CAAd,CAFF;AAGD;AACF,SAVH;AAYE,QAAA,SAAS,EACP,YAAY,KAAKlB,KAAL,CAAWC,SAAX,IAAwBG,GAAG,KAAK,CAAhC,GAAoC,SAApC,GAAgD,EAA5D,CAbJ;AAAA,gCAgBE;AAAA,iCACE;AACE,YAAA,GAAG,EAAEe,OAAO,CAAE,uBAAsBH,IAAI,CAACI,KAAM,EAAnC,CADd;AAEE,YAAA,GAAG,EAAEJ,IAAI,CAACT;AAFZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAhBF,eAsBE;AAAA,oBAAaS,IAAI,CAACT;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAtBF,eAuBE;AAAA,oBAAIS,IAAI,CAACK;AAAT;AAAA;AAAA;AAAA;AAAA,gBAvBF,EAwBG,KAAKrB,KAAL,CAAWC,SAAX,IAAwBG,GAAG,KAAK,CAAhC,gBACC;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADD,gBAGC;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBA3BJ;AAAA,SAWOA,GAXP;AAAA;AAAA;AAAA;AAAA,cADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqCD;;AArEqC;;AAwExC,eAAeR,SAAf","sourcesContent":["import React from \"react\";\nimport \"./trackList.scss\";\n\nclass TrackList extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  state = {\n    isPlaying: false,\n    artists: [],\n  };\n\n  playHandler = (idx) => {\n    let newStatus = !this.state.isPlaying;\n\n    if (idx !== 0) {\n      newStatus = true;\n      const artists = [...this.props.tracks.singerName];\n      artists.splice(idx, 1);\n      console.log(artists);\n      const newArtists = [this.props.tracks[idx], ...artists];\n\n      this.setState({\n        artists: newArtists,\n      });\n    }\n\n    this.setState({\n      isPlaying: newStatus,\n    });\n    console.log(newStatus);\n  };\n\n  render() {\n    return (\n      <div id=\"trackList\">\n        <h2>{this.props.title}</h2>\n        {this.props.tracks.map((item, idx) => (\n          <div\n            onClick={() => {\n              //this.props.action(this.props.title, idx);\n              this.playHandler(idx);\n\n              {\n                this.props.title == \"Recently Played\" &&\n                  item.length >= 5 &&\n                  item.slice(0, 5);\n              }\n            }}\n            key={idx}\n            className={\n              \"albums\" + (this.state.isPlaying && idx === 0 ? \" active\" : \"\")\n            }\n          >\n            <figure>\n              <img\n                src={require(`../../assets/images/${item.image}`)}\n                alt={item.singerName}\n              />\n            </figure>\n            <figcaption>{item.singerName}</figcaption>\n            <p>{item.albumsName}</p>\n            {this.state.isPlaying && idx === 0 ? (\n              <i className=\"las la-pause\"></i>\n            ) : (\n              <i className=\"las la-play\"></i>\n            )}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default TrackList;\n"]},"metadata":{},"sourceType":"module"}