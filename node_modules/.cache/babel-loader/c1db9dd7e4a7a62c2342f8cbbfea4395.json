{"ast":null,"code":"var _jsxFileName = \"/media/fari/Works/1-sample-work/spotify/src/App.js\";\nimport React from \"react\";\nimport Aside from \"./components/aside/aside\";\nimport Content from \"./components/content/content\";\nimport Header from \"./components/header/header\";\nimport Footer from \"./components/footer/footer\";\nimport \"./App.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: \"home\",\n      searchText: \"\",\n      isLoaded: false,\n      track: {\n        image: \"arash.jpeg\",\n        trackName: \"harchi_1\",\n        trackUrl: \"harchi_1.mp3\",\n        singerName: \"Arash\"\n      },\n      tracks: {\n        recentlyTracks: {\n          title: \"Recently played\",\n          data: [{\n            image: \"Katy_Perry_Smile.png\",\n            singerName: \"Kety Perry\",\n            albumsName: \"smile\"\n          }, {\n            image: \"arash.jpeg\",\n            singerName: \"Arash\",\n            albumsName: \"harchi\"\n          }, {\n            image: \"alesso.jpeg\",\n            singerName: \"alesso\",\n            albumsName: \"chert\"\n          }, {\n            image: \"Katy_Perry_Smile.png\",\n            singerName: \"Kety Perry\",\n            albumsName: \"smile\"\n          }, {\n            image: \"arash.jpeg\",\n            singerName: \"Arash\",\n            albumsName: \"harchi\"\n          }, {\n            image: \"alesso.jpeg\",\n            singerName: \"alesso\",\n            albumsName: \"chert\"\n          }, {\n            image: \"alesso.jpeg\",\n            singerName: \"alesso\",\n            albumsName: \"chert\"\n          }]\n        },\n        allTracks: {\n          title: \"Tracks list\",\n          data: [{\n            image: \"Katy_Perry_Smile.png\",\n            singerName: \"Kety Perry\",\n            albumsName: \"smile\"\n          }, {\n            image: \"arash.jpeg\",\n            singerName: \"Arash\",\n            albumsName: \"harchi\"\n          }, {\n            image: \"alesso.jpeg\",\n            singerName: \"alesso\",\n            albumsName: \"chert\"\n          }, {\n            image: \"rap.jpg\",\n            singerName: \"Adel\",\n            albumsName: \"adel\"\n          }, {\n            image: \"arash.jpeg\",\n            singerName: \"Arash\",\n            albumsName: \"harchi\"\n          }, {\n            image: \"alesso.jpeg\",\n            singerName: \"alesso\",\n            albumsName: \"chert\"\n          }]\n        }\n      }\n    };\n\n    this.handleAsideClick = page => {\n      this.setState({\n        currentPage: page\n      });\n      console.log(\"page:\", page);\n    };\n\n    this.handleSearch = singer => {\n      console.clear();\n      console.log(singer);\n      this.loadAlbums(singer);\n    };\n\n    this.loadAlbums = singer => {\n      fetch(\"https://api.spotify.com/v1/search\").then(res => res.json()).then(result => {\n        this.setState({\n          isLoaded: true,\n          tracks: result.items\n        });\n      }, error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      });\n      const recivedData = [{\n        singer: \"fari 1\",\n        track: \"track 1\"\n      }, {\n        singer: \"fari 2\",\n        track: \"track 2\"\n      }];\n      this.setState({\n        data: recivedData\n      });\n    };\n\n    this.loadMore = () => {\n      let newTracks = this.state.tracks;\n      let newData = newTracks.allTracks.data;\n      newData = [...newData, ...newData];\n      newTracks.allTracks.data = newData;\n      this.setState({\n        tracks: newTracks\n      });\n      console.log(\"loadMore: \", newTracks);\n    };\n\n    this.playMusic = (title, idx) => {\n      console.log(title, idx);\n\n      if (title == 'Recently played') {\n        let newTracks = { ...this.state.tracks\n        };\n        newTracks.recentlyTracks.data.splice(idx, 1);\n        newTracks = [this.state.tracks.recentlyTracks.data[idx], ...newTracks.recentlyTracks.data];\n        this.setState({\n          tracks: newTracks\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Aside, {\n        action: this.handleAsideClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        page: this.state.currentPage,\n        title: this.state.currentPage,\n        action: this.handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Content, {\n        recentlyPlayed_app: this.state.tracks.recentlyTracks,\n        tracks_app: this.state.tracks.allTracks,\n        scrollAction_app: this.loadMore,\n        playAction_app: this.playMusic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        data: this.state.track\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/media/fari/Works/1-sample-work/spotify/src/App.js"],"names":["React","Aside","Content","Header","Footer","App","Component","constructor","props","state","currentPage","searchText","isLoaded","track","image","trackName","trackUrl","singerName","tracks","recentlyTracks","title","data","albumsName","allTracks","handleAsideClick","page","setState","console","log","handleSearch","singer","clear","loadAlbums","fetch","then","res","json","result","items","error","recivedData","loadMore","newTracks","newData","playMusic","idx","splice","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Aside from \"./components/aside/aside\";\nimport Content from \"./components/content/content\";\nimport Header from \"./components/header/header\";\nimport Footer from \"./components/footer/footer\";\n\nimport \"./App.scss\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  state = {\n    currentPage: \"home\",\n    searchText: \"\",\n    isLoaded: false,\n    track: {\n      image: \"arash.jpeg\",\n      trackName: \"harchi_1\",\n      trackUrl: \"harchi_1.mp3\",\n      singerName: \"Arash\"\n    },\n    tracks: {\n      recentlyTracks: {\n        title: \"Recently played\",\n        data: [\n          {\n            image: \"Katy_Perry_Smile.png\",\n            singerName: \"Kety Perry\",\n            albumsName: \"smile\",\n          },\n          {\n            image: \"arash.jpeg\",\n            singerName: \"Arash\",\n            albumsName: \"harchi\",\n          },\n          {\n            image: \"alesso.jpeg\",\n            singerName: \"alesso\",\n            albumsName: \"chert\",\n          },\n          {\n            image: \"Katy_Perry_Smile.png\",\n            singerName: \"Kety Perry\",\n            albumsName: \"smile\",\n          },\n          {\n            image: \"arash.jpeg\",\n            singerName: \"Arash\",\n            albumsName: \"harchi\",\n          },\n          {\n            image: \"alesso.jpeg\",\n            singerName: \"alesso\",\n            albumsName: \"chert\",\n          },\n          {\n            image: \"alesso.jpeg\",\n            singerName: \"alesso\",\n            albumsName: \"chert\",\n          },\n        ]\n      },\n      allTracks: {\n        title: \"Tracks list\",\n        data: [\n          {\n            image: \"Katy_Perry_Smile.png\",\n            singerName: \"Kety Perry\",\n            albumsName: \"smile\",\n          },\n          {\n            image: \"arash.jpeg\",\n            singerName: \"Arash\",\n            albumsName: \"harchi\",\n          },\n          {\n            image: \"alesso.jpeg\",\n            singerName: \"alesso\",\n            albumsName: \"chert\",\n          },\n          {\n            image: \"rap.jpg\",\n            singerName: \"Adel\",\n            albumsName: \"adel\",\n          },\n          {\n            image: \"arash.jpeg\",\n            singerName: \"Arash\",\n            albumsName: \"harchi\",\n          },\n          {\n            image: \"alesso.jpeg\",\n            singerName: \"alesso\",\n            albumsName: \"chert\",\n          }\n        ]\n      }\n    }\n  };\n\n  handleAsideClick = (page) => {\n    this.setState({\n      currentPage: page,\n    });\n    console.log(\"page:\", page);\n  };\n\n  handleSearch = (singer) => {\n    console.clear();\n    console.log(singer);\n    this.loadAlbums(singer);\n  };\n\n  loadAlbums = (singer) => {\n    fetch(\"https://api.spotify.com/v1/search\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            tracks: result.items\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n\n    const recivedData = [\n      {\n        singer: \"fari 1\",\n        track: \"track 1\",\n      },\n      {\n        singer: \"fari 2\",\n        track: \"track 2\",\n      },\n    ];\n\n    this.setState({\n      data: recivedData,\n    });\n  };\n\n  loadMore = () => {\n    let newTracks = this.state.tracks;\n    let newData = newTracks.allTracks.data;\n    newData = [...newData, ...newData];\n    newTracks.allTracks.data = newData;\n\n    this.setState({\n      tracks: newTracks,\n    });\n\n    console.log(\"loadMore: \", newTracks)\n  }\n\n  playMusic = (title, idx) => {\n    console.log(title, idx);\n    if (title == 'Recently played') {\n      let newTracks = { ...this.state.tracks };\n      newTracks.recentlyTracks.data.splice(idx, 1);\n      newTracks = [this.state.tracks.recentlyTracks.data[idx], ...newTracks.recentlyTracks.data];\n      this.setState({\n        tracks: newTracks\n      })\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <Aside action={this.handleAsideClick} />\n        <Header\n          page={this.state.currentPage}\n          title={this.state.currentPage}\n          action={this.handleSearch}\n        />\n        <Content\n          recentlyPlayed_app={this.state.tracks.recentlyTracks}\n          tracks_app={this.state.tracks.allTracks}\n          scrollAction_app={this.loadMore}\n          playAction_app={this.playMusic}\n        />\n        <Footer data={this.state.track} />\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}